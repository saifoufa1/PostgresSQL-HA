services:
  pgaf-monitor:
    build:
      context: .
      dockerfile: Dockerfile.pgaf
    container_name: pgaf-monitor
    hostname: pgaf-monitor
    entrypoint: ["/opt/pgaf/monitor-entrypoint.sh"]
    environment:
      PGDATA: /var/lib/postgresql/monitor
      PGAF_MONITOR_PORT: "5431"
      PGAF_MONITOR_LISTEN: 0.0.0.0
      PGAF_MONITOR_AUTH: trust
      PGAF_CLIENT_CIDR: ${PG_HBA_CIDR:-172.28.0.0/24}
    ports:
      - "5431:5431"
    volumes:
      - monitor_data:/var/lib/postgresql/monitor
    networks:
      postgres-cluster:
        ipv4_address: 172.28.0.5

  postgres-primary:
    build:
      context: .
      dockerfile: Dockerfile.pgaf
    container_name: postgres-primary
    hostname: postgres-primary
    entrypoint: ["/opt/pgaf/keeper-entrypoint.sh"]
    depends_on:
      - pgaf-monitor
    environment:
      PGDATA: /var/lib/postgresql/pgdata
      PGAF_NODE_NAME: node1
      PGAF_NODE_HOSTNAME: postgres-primary
      PGAF_NODE_PORT: "5432"
      PGAF_NODE_AUTH: trust
      PGAF_NODE_AUTOCTL_PORT: "6010"
      PGAF_NODE_CANDIDATE_PRIORITY: "100"
      PGAF_NODE_CLIENT_CIDR: ${PG_HBA_CIDR}
      PGAF_BOOTSTRAP: "true"
      PG_AUTOCTL_MONITOR: postgresql://autoctl_node@pgaf-monitor:5431/pg_auto_failover
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres_password
      POSTGRES_DB: healthcare_db
      LOAD_SCHEMA: ${LOAD_SCHEMA:-true}
      LOAD_TEST_DATA: ${LOAD_TEST_DATA:-true}
      APP_USER: ${APP_USER:-admin}
      APP_PASSWORD: ${APP_PASSWORD:-admin}
    ports:
      - "5432:5432"
    volumes:
      - postgres-primary:/var/lib/postgresql
      - ./sql:/sql:ro
      - ./scripts:/scripts:ro
    networks:
      postgres-cluster:
        ipv4_address: 172.28.0.10

  postgres-replica1:
    build:
      context: .
      dockerfile: Dockerfile.pgaf
    container_name: postgres-replica1
    hostname: postgres-replica1
    entrypoint: ["/opt/pgaf/keeper-entrypoint.sh"]
    depends_on:
      - pgaf-monitor
    environment:
      PGDATA: /var/lib/postgresql/pgdata
      PGAF_NODE_NAME: node2
      PGAF_NODE_HOSTNAME: postgres-replica1
      PGAF_NODE_PORT: "5432"
      PGAF_NODE_AUTH: trust
      PGAF_NODE_AUTOCTL_PORT: "6011"
      PGAF_NODE_CANDIDATE_PRIORITY: "90"
      PGAF_NODE_CLIENT_CIDR: ${PG_HBA_CIDR}
      PG_AUTOCTL_MONITOR: postgresql://autoctl_node@pgaf-monitor:5431/pg_auto_failover
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres_password
      POSTGRES_DB: healthcare_db
    ports:
      - "5433:5432"
    volumes:
      - postgres-replica1:/var/lib/postgresql
      - ./sql:/sql:ro
      - ./scripts:/scripts:ro
    networks:
      postgres-cluster:
        ipv4_address: 172.28.0.11

  postgres-replica2:
    build:
      context: .
      dockerfile: Dockerfile.pgaf
    container_name: postgres-replica2
    hostname: postgres-replica2
    entrypoint: ["/opt/pgaf/keeper-entrypoint.sh"]
    depends_on:
      - pgaf-monitor
    environment:
      PGDATA: /var/lib/postgresql/pgdata
      PGAF_NODE_NAME: node3
      PGAF_NODE_HOSTNAME: postgres-replica2
      PGAF_NODE_PORT: "5432"
      PGAF_NODE_AUTH: trust
      PGAF_NODE_AUTOCTL_PORT: "6012"
      PGAF_NODE_CANDIDATE_PRIORITY: "80"
      PGAF_NODE_CLIENT_CIDR: ${PG_HBA_CIDR}
      PG_AUTOCTL_MONITOR: postgresql://autoctl_node@pgaf-monitor:5431/pg_auto_failover
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres_password
      POSTGRES_DB: healthcare_db
    ports:
      - "5434:5432"
    volumes:
      - postgres-replica2:/var/lib/postgresql
      - ./sql:/sql:ro
      - ./scripts:/scripts:ro
    networks:
      postgres-cluster:
        ipv4_address: 172.28.0.12

  postgres-exporter:
    image: prometheuscommunity/postgres-exporter
    container_name: postgres-exporter
    environment:
      DATA_SOURCE_NAME: "postgresql://postgres:postgres_password@postgres-primary:5432,postgres-replica1:5432,postgres-replica2:5432/postgres?target_session_attrs=read-write&sslmode=disable"
    ports:
      - "9187:9187"
    depends_on:
      - postgres-primary
    networks:
      postgres-cluster:
        ipv4_address: 172.28.0.20

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"
    networks:
      postgres-cluster:
        ipv4_address: 172.28.0.21

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
    ports:
      - "3000:3000"
    volumes:
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
    depends_on:
      - prometheus
    networks:
      postgres-cluster:
        ipv4_address: 172.28.0.30

networks:
  postgres-cluster:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/24

volumes:
  monitor_data:
  postgres-primary:
  postgres-replica1:
  postgres-replica2: